// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaTIC.App.Persistencia;

#nullable disable

namespace PizzaTIC.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AcompanamientoInvProducto", b =>
                {
                    b.Property<int>("AcompanamientosId")
                        .HasColumnType("int");

                    b.Property<int>("InvProductosId")
                        .HasColumnType("int");

                    b.HasKey("AcompanamientosId", "InvProductosId");

                    b.HasIndex("InvProductosId");

                    b.ToTable("AcompanamientoInvProducto");
                });

            modelBuilder.Entity("BebidaCalienteInvProducto", b =>
                {
                    b.Property<int>("BebidasCalientesId")
                        .HasColumnType("int");

                    b.Property<int>("InvProductosId")
                        .HasColumnType("int");

                    b.HasKey("BebidasCalientesId", "InvProductosId");

                    b.HasIndex("InvProductosId");

                    b.ToTable("BebidaCalienteInvProducto");
                });

            modelBuilder.Entity("ClientePedido", b =>
                {
                    b.Property<int>("ClientesId")
                        .HasColumnType("int");

                    b.Property<int>("PedidosId")
                        .HasColumnType("int");

                    b.HasKey("ClientesId", "PedidosId");

                    b.HasIndex("PedidosId");

                    b.ToTable("ClientePedido");
                });

            modelBuilder.Entity("ComboInvProducto", b =>
                {
                    b.Property<int>("ComboId")
                        .HasColumnType("int");

                    b.Property<int>("InvProductosId")
                        .HasColumnType("int");

                    b.HasKey("ComboId", "InvProductosId");

                    b.HasIndex("InvProductosId");

                    b.ToTable("ComboInvProducto");
                });

            modelBuilder.Entity("GalletaInvProducto", b =>
                {
                    b.Property<int>("GalletasId")
                        .HasColumnType("int");

                    b.Property<int>("InvProductosId")
                        .HasColumnType("int");

                    b.HasKey("GalletasId", "InvProductosId");

                    b.HasIndex("InvProductosId");

                    b.ToTable("GalletaInvProducto");
                });

            modelBuilder.Entity("HamburgesaIngrediente", b =>
                {
                    b.Property<int>("HamburgesasId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientesId")
                        .HasColumnType("int");

                    b.HasKey("HamburgesasId", "IngredientesId");

                    b.HasIndex("IngredientesId");

                    b.ToTable("HamburgesaIngrediente");
                });

            modelBuilder.Entity("HamburgesaInvProducto", b =>
                {
                    b.Property<int>("HamburgesasId")
                        .HasColumnType("int");

                    b.Property<int>("InvProductosId")
                        .HasColumnType("int");

                    b.HasKey("HamburgesasId", "InvProductosId");

                    b.HasIndex("InvProductosId");

                    b.ToTable("HamburgesaInvProducto");
                });

            modelBuilder.Entity("HeladoInvProducto", b =>
                {
                    b.Property<int>("HeladosId")
                        .HasColumnType("int");

                    b.Property<int>("InvProductosId")
                        .HasColumnType("int");

                    b.HasKey("HeladosId", "InvProductosId");

                    b.HasIndex("InvProductosId");

                    b.ToTable("HeladoInvProducto");
                });

            modelBuilder.Entity("IngredientePastel", b =>
                {
                    b.Property<int>("IngredientesId")
                        .HasColumnType("int");

                    b.Property<int>("PastelsId")
                        .HasColumnType("int");

                    b.HasKey("IngredientesId", "PastelsId");

                    b.HasIndex("PastelsId");

                    b.ToTable("IngredientePastel");
                });

            modelBuilder.Entity("IngredientePerro", b =>
                {
                    b.Property<int>("IngredientesId")
                        .HasColumnType("int");

                    b.Property<int>("PerrosId")
                        .HasColumnType("int");

                    b.HasKey("IngredientesId", "PerrosId");

                    b.HasIndex("PerrosId");

                    b.ToTable("IngredientePerro");
                });

            modelBuilder.Entity("IngredientePizza", b =>
                {
                    b.Property<int>("IngredientesId")
                        .HasColumnType("int");

                    b.Property<int>("PizzasId")
                        .HasColumnType("int");

                    b.HasKey("IngredientesId", "PizzasId");

                    b.HasIndex("PizzasId");

                    b.ToTable("IngredientePizza");
                });

            modelBuilder.Entity("InvLineaDeProductoInvProducto", b =>
                {
                    b.Property<int>("InvLineaDeProductosId")
                        .HasColumnType("int");

                    b.Property<int>("InvProductosId")
                        .HasColumnType("int");

                    b.HasKey("InvLineaDeProductosId", "InvProductosId");

                    b.HasIndex("InvProductosId");

                    b.ToTable("InvLineaDeProductoInvProducto");
                });

            modelBuilder.Entity("InvProductoJugoNatural", b =>
                {
                    b.Property<int>("InvProductosId")
                        .HasColumnType("int");

                    b.Property<int>("JugosNaturalesId")
                        .HasColumnType("int");

                    b.HasKey("InvProductosId", "JugosNaturalesId");

                    b.HasIndex("JugosNaturalesId");

                    b.ToTable("InvProductoJugoNatural");
                });

            modelBuilder.Entity("InvProductoPastel", b =>
                {
                    b.Property<int>("InvProductosId")
                        .HasColumnType("int");

                    b.Property<int>("PastelesId")
                        .HasColumnType("int");

                    b.HasKey("InvProductosId", "PastelesId");

                    b.HasIndex("PastelesId");

                    b.ToTable("InvProductoPastel");
                });

            modelBuilder.Entity("InvProductoPerro", b =>
                {
                    b.Property<int>("InvProductosId")
                        .HasColumnType("int");

                    b.Property<int>("PerrosId")
                        .HasColumnType("int");

                    b.HasKey("InvProductosId", "PerrosId");

                    b.HasIndex("PerrosId");

                    b.ToTable("InvProductoPerro");
                });

            modelBuilder.Entity("InvProductoPizza", b =>
                {
                    b.Property<int>("InvProductosId")
                        .HasColumnType("int");

                    b.Property<int>("PizzasId")
                        .HasColumnType("int");

                    b.HasKey("InvProductosId", "PizzasId");

                    b.HasIndex("PizzasId");

                    b.ToTable("InvProductoPizza");
                });

            modelBuilder.Entity("InvProductoPostre", b =>
                {
                    b.Property<int>("InvProductosId")
                        .HasColumnType("int");

                    b.Property<int>("PostresId")
                        .HasColumnType("int");

                    b.HasKey("InvProductosId", "PostresId");

                    b.HasIndex("PostresId");

                    b.ToTable("InvProductoPostre");
                });

            modelBuilder.Entity("InvProductoRefresco", b =>
                {
                    b.Property<int>("InvProductosId")
                        .HasColumnType("int");

                    b.Property<int>("RefrescosId")
                        .HasColumnType("int");

                    b.HasKey("InvProductosId", "RefrescosId");

                    b.HasIndex("RefrescosId");

                    b.ToTable("InvProductoRefresco");
                });

            modelBuilder.Entity("LineaDeProductoPedido", b =>
                {
                    b.Property<int>("LineaDeProductosId")
                        .HasColumnType("int");

                    b.Property<int>("PedidosId")
                        .HasColumnType("int");

                    b.HasKey("LineaDeProductosId", "PedidosId");

                    b.HasIndex("PedidosId");

                    b.ToTable("LineaDeProductoPedido");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Acompanamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AcompanamientoDescripcion")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("AcompanamientoNombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Combo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ComboId")
                        .HasColumnType("int");

                    b.Property<int?>("especificacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComboId");

                    b.HasIndex("especificacionId");

                    b.ToTable("Acompanamientos");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Administrador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NivelDeAcceso")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.BebidaCaliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BebidaCalienteDescripcion")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BebidaCalienteoNombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Combo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ComboId")
                        .HasColumnType("int");

                    b.Property<int?>("especificacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComboId");

                    b.HasIndex("especificacionId");

                    b.ToTable("BebidasCalientes");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.CarritoDeCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("FechaDeCreacion")
                        .HasMaxLength(30)
                        .HasColumnType("datetime2");

                    b.Property<int?>("pedidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("pedidoId");

                    b.ToTable("CarritosDeCompras");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("formaDePagoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("formaDePagoId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Combo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ComboDescripcion")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("ComboNombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Combo");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.ComidaTamano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Alto")
                        .HasColumnType("int");

                    b.Property<int>("Ancho")
                        .HasColumnType("int");

                    b.Property<string>("ComidaTamanoNombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Largo")
                        .HasColumnType("int");

                    b.Property<int>("NumeroIngredientes")
                        .HasColumnType("int");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoEmpaque")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("ComidaTamanos");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Envio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompaniaTransporte")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DireccionFacturacion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("FechaDeEnvio")
                        .HasMaxLength(30)
                        .HasColumnType("datetime2");

                    b.Property<bool>("Finalizado")
                        .HasColumnType("bit");

                    b.Property<int?>("envioId")
                        .HasColumnType("int");

                    b.Property<int?>("pagoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("envioId");

                    b.HasIndex("pagoId");

                    b.ToTable("Envios");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Especificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Alto")
                        .HasColumnType("int");

                    b.Property<int>("Ancho")
                        .HasColumnType("int");

                    b.Property<int>("Largo")
                        .HasColumnType("int");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoEmpaque")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Especificaciones");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.FormaDePago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CodigoDeSeguridad")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateTime?>("FechaDeVencimiento")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreEnTarjeta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("NumeroEnTarjeta")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("float");

                    b.Property<string>("TipoDeTarjeta")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("FormasDePagos");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Galleta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Combo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ComboId")
                        .HasColumnType("int");

                    b.Property<string>("GalletaDescripcion")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("GalletaNombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("especificacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComboId");

                    b.HasIndex("especificacionId");

                    b.ToTable("Galletas");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Hamburgesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Combo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ComboId")
                        .HasColumnType("int");

                    b.Property<string>("HamburgesaDescripcion")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("HamburgesaNombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("comidaTamanoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComboId");

                    b.HasIndex("comidaTamanoId");

                    b.ToTable("Hamburgesas");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Helado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Combo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ComboId")
                        .HasColumnType("int");

                    b.Property<string>("HeladoDescripcion")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("HeladoNombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("especificacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComboId");

                    b.HasIndex("especificacionId");

                    b.ToTable("Helados");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Ingrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Calorias")
                        .HasColumnType("int");

                    b.Property<string>("NombreIngrediente")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoIngrediente")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Ingredientes");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.InvLineaDeProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("INVLPCodigo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("INVLPNombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("LineaDeProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LineaDeProductoId");

                    b.ToTable("InvLineaDeProductos");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.InvProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("INVProductoCodigo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("INVProductoNombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("InvProductos");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.JugoNatural", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Combo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ComboId")
                        .HasColumnType("int");

                    b.Property<string>("JugoNaturalDescripcion")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("JugoNaturalNombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("especificacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComboId");

                    b.HasIndex("especificacionId");

                    b.ToTable("JugosNaturales");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.LineaDeProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal?>("PrecioLP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("carritoDeCompraId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("carritoDeCompraId");

                    b.ToTable("LineasDeProductos");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Factura")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("FechaDePago")
                        .HasMaxLength(30)
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("PagoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("formaDePagoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("formaDePagoId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Pastel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Combo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ComboId")
                        .HasColumnType("int");

                    b.Property<string>("PastelDescripcion")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PastelNombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("comidaTamanoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComboId");

                    b.HasIndex("comidaTamanoId");

                    b.ToTable("Pasteles");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("FechaDeRealizacion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("datetime2");

                    b.Property<int?>("pagoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("pagoId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Perro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Combo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ComboId")
                        .HasColumnType("int");

                    b.Property<string>("PerroDescripcion")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PerroNombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("comidaTamanoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComboId");

                    b.HasIndex("comidaTamanoId");

                    b.ToTable("Perros");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Combo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ComboId")
                        .HasColumnType("int");

                    b.Property<string>("PizzaDescripcion")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PizzaNombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("comidaTamanoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComboId");

                    b.HasIndex("comidaTamanoId");

                    b.ToTable("Pizzas");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Postre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Combo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ComboId")
                        .HasColumnType("int");

                    b.Property<string>("PostreDescripcion")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PostreNombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("especificacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComboId");

                    b.HasIndex("especificacionId");

                    b.ToTable("Postres");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("LineaDeProductoId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LineaDeProductoId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Refresco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Combo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ComboId")
                        .HasColumnType("int");

                    b.Property<string>("RefrescoDescripcion")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("RefrescoNombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("especificacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComboId");

                    b.HasIndex("especificacionId");

                    b.ToTable("Refrescos");
                });

            modelBuilder.Entity("AcompanamientoInvProducto", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Acompanamiento", null)
                        .WithMany()
                        .HasForeignKey("AcompanamientosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaTIC.App.Dominio.InvProducto", null)
                        .WithMany()
                        .HasForeignKey("InvProductosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BebidaCalienteInvProducto", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.BebidaCaliente", null)
                        .WithMany()
                        .HasForeignKey("BebidasCalientesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaTIC.App.Dominio.InvProducto", null)
                        .WithMany()
                        .HasForeignKey("InvProductosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClientePedido", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Cliente", null)
                        .WithMany()
                        .HasForeignKey("ClientesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaTIC.App.Dominio.Pedido", null)
                        .WithMany()
                        .HasForeignKey("PedidosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ComboInvProducto", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Combo", null)
                        .WithMany()
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaTIC.App.Dominio.InvProducto", null)
                        .WithMany()
                        .HasForeignKey("InvProductosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GalletaInvProducto", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Galleta", null)
                        .WithMany()
                        .HasForeignKey("GalletasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaTIC.App.Dominio.InvProducto", null)
                        .WithMany()
                        .HasForeignKey("InvProductosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HamburgesaIngrediente", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Hamburgesa", null)
                        .WithMany()
                        .HasForeignKey("HamburgesasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaTIC.App.Dominio.Ingrediente", null)
                        .WithMany()
                        .HasForeignKey("IngredientesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HamburgesaInvProducto", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Hamburgesa", null)
                        .WithMany()
                        .HasForeignKey("HamburgesasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaTIC.App.Dominio.InvProducto", null)
                        .WithMany()
                        .HasForeignKey("InvProductosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HeladoInvProducto", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Helado", null)
                        .WithMany()
                        .HasForeignKey("HeladosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaTIC.App.Dominio.InvProducto", null)
                        .WithMany()
                        .HasForeignKey("InvProductosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IngredientePastel", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Ingrediente", null)
                        .WithMany()
                        .HasForeignKey("IngredientesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaTIC.App.Dominio.Pastel", null)
                        .WithMany()
                        .HasForeignKey("PastelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IngredientePerro", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Ingrediente", null)
                        .WithMany()
                        .HasForeignKey("IngredientesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaTIC.App.Dominio.Perro", null)
                        .WithMany()
                        .HasForeignKey("PerrosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IngredientePizza", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Ingrediente", null)
                        .WithMany()
                        .HasForeignKey("IngredientesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaTIC.App.Dominio.Pizza", null)
                        .WithMany()
                        .HasForeignKey("PizzasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InvLineaDeProductoInvProducto", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.InvLineaDeProducto", null)
                        .WithMany()
                        .HasForeignKey("InvLineaDeProductosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaTIC.App.Dominio.InvProducto", null)
                        .WithMany()
                        .HasForeignKey("InvProductosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InvProductoJugoNatural", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.InvProducto", null)
                        .WithMany()
                        .HasForeignKey("InvProductosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaTIC.App.Dominio.JugoNatural", null)
                        .WithMany()
                        .HasForeignKey("JugosNaturalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InvProductoPastel", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.InvProducto", null)
                        .WithMany()
                        .HasForeignKey("InvProductosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaTIC.App.Dominio.Pastel", null)
                        .WithMany()
                        .HasForeignKey("PastelesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InvProductoPerro", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.InvProducto", null)
                        .WithMany()
                        .HasForeignKey("InvProductosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaTIC.App.Dominio.Perro", null)
                        .WithMany()
                        .HasForeignKey("PerrosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InvProductoPizza", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.InvProducto", null)
                        .WithMany()
                        .HasForeignKey("InvProductosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaTIC.App.Dominio.Pizza", null)
                        .WithMany()
                        .HasForeignKey("PizzasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InvProductoPostre", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.InvProducto", null)
                        .WithMany()
                        .HasForeignKey("InvProductosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaTIC.App.Dominio.Postre", null)
                        .WithMany()
                        .HasForeignKey("PostresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InvProductoRefresco", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.InvProducto", null)
                        .WithMany()
                        .HasForeignKey("InvProductosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaTIC.App.Dominio.Refresco", null)
                        .WithMany()
                        .HasForeignKey("RefrescosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LineaDeProductoPedido", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.LineaDeProducto", null)
                        .WithMany()
                        .HasForeignKey("LineaDeProductosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaTIC.App.Dominio.Pedido", null)
                        .WithMany()
                        .HasForeignKey("PedidosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Acompanamiento", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Combo", null)
                        .WithMany("Acompanamientos")
                        .HasForeignKey("ComboId");

                    b.HasOne("PizzaTIC.App.Dominio.Especificacion", "especificacion")
                        .WithMany()
                        .HasForeignKey("especificacionId");

                    b.Navigation("especificacion");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.BebidaCaliente", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Combo", null)
                        .WithMany("BebidaCalientes")
                        .HasForeignKey("ComboId");

                    b.HasOne("PizzaTIC.App.Dominio.Especificacion", "especificacion")
                        .WithMany()
                        .HasForeignKey("especificacionId");

                    b.Navigation("especificacion");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.CarritoDeCompra", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Pedido", "pedido")
                        .WithMany()
                        .HasForeignKey("pedidoId");

                    b.Navigation("pedido");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Cliente", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.FormaDePago", "formaDePago")
                        .WithMany()
                        .HasForeignKey("formaDePagoId");

                    b.Navigation("formaDePago");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Envio", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Envio", "envio")
                        .WithMany()
                        .HasForeignKey("envioId");

                    b.HasOne("PizzaTIC.App.Dominio.Pago", "pago")
                        .WithMany()
                        .HasForeignKey("pagoId");

                    b.Navigation("envio");

                    b.Navigation("pago");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Galleta", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Combo", null)
                        .WithMany("Galletas")
                        .HasForeignKey("ComboId");

                    b.HasOne("PizzaTIC.App.Dominio.Especificacion", "especificacion")
                        .WithMany()
                        .HasForeignKey("especificacionId");

                    b.Navigation("especificacion");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Hamburgesa", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Combo", null)
                        .WithMany("Hamburgesas")
                        .HasForeignKey("ComboId");

                    b.HasOne("PizzaTIC.App.Dominio.ComidaTamano", "comidaTamano")
                        .WithMany()
                        .HasForeignKey("comidaTamanoId");

                    b.Navigation("comidaTamano");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Helado", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Combo", null)
                        .WithMany("Helados")
                        .HasForeignKey("ComboId");

                    b.HasOne("PizzaTIC.App.Dominio.Especificacion", "especificacion")
                        .WithMany()
                        .HasForeignKey("especificacionId");

                    b.Navigation("especificacion");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.InvLineaDeProducto", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.LineaDeProducto", null)
                        .WithMany("InvLineaDeProductos")
                        .HasForeignKey("LineaDeProductoId");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.InvProducto", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Producto", null)
                        .WithMany("InvProductos")
                        .HasForeignKey("ProductoId");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.JugoNatural", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Combo", null)
                        .WithMany("JugoNaturals")
                        .HasForeignKey("ComboId");

                    b.HasOne("PizzaTIC.App.Dominio.Especificacion", "especificacion")
                        .WithMany()
                        .HasForeignKey("especificacionId");

                    b.Navigation("especificacion");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.LineaDeProducto", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.CarritoDeCompra", "carritoDeCompra")
                        .WithMany()
                        .HasForeignKey("carritoDeCompraId");

                    b.Navigation("carritoDeCompra");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Pago", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.FormaDePago", "formaDePago")
                        .WithMany()
                        .HasForeignKey("formaDePagoId");

                    b.Navigation("formaDePago");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Pastel", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Combo", null)
                        .WithMany("Pastels")
                        .HasForeignKey("ComboId");

                    b.HasOne("PizzaTIC.App.Dominio.ComidaTamano", "comidaTamano")
                        .WithMany()
                        .HasForeignKey("comidaTamanoId");

                    b.Navigation("comidaTamano");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Pedido", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Pago", "pago")
                        .WithMany()
                        .HasForeignKey("pagoId");

                    b.Navigation("pago");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Perro", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Combo", null)
                        .WithMany("Perros")
                        .HasForeignKey("ComboId");

                    b.HasOne("PizzaTIC.App.Dominio.ComidaTamano", "comidaTamano")
                        .WithMany()
                        .HasForeignKey("comidaTamanoId");

                    b.Navigation("comidaTamano");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Pizza", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Combo", null)
                        .WithMany("Pizzas")
                        .HasForeignKey("ComboId");

                    b.HasOne("PizzaTIC.App.Dominio.ComidaTamano", "comidaTamano")
                        .WithMany()
                        .HasForeignKey("comidaTamanoId");

                    b.Navigation("comidaTamano");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Postre", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Combo", null)
                        .WithMany("Postres")
                        .HasForeignKey("ComboId");

                    b.HasOne("PizzaTIC.App.Dominio.Especificacion", "especificacion")
                        .WithMany()
                        .HasForeignKey("especificacionId");

                    b.Navigation("especificacion");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Producto", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.LineaDeProducto", null)
                        .WithMany("Productos")
                        .HasForeignKey("LineaDeProductoId");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Refresco", b =>
                {
                    b.HasOne("PizzaTIC.App.Dominio.Combo", null)
                        .WithMany("Refrescos")
                        .HasForeignKey("ComboId");

                    b.HasOne("PizzaTIC.App.Dominio.Especificacion", "especificacion")
                        .WithMany()
                        .HasForeignKey("especificacionId");

                    b.Navigation("especificacion");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Combo", b =>
                {
                    b.Navigation("Acompanamientos");

                    b.Navigation("BebidaCalientes");

                    b.Navigation("Galletas");

                    b.Navigation("Hamburgesas");

                    b.Navigation("Helados");

                    b.Navigation("JugoNaturals");

                    b.Navigation("Pastels");

                    b.Navigation("Perros");

                    b.Navigation("Pizzas");

                    b.Navigation("Postres");

                    b.Navigation("Refrescos");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.LineaDeProducto", b =>
                {
                    b.Navigation("InvLineaDeProductos");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("PizzaTIC.App.Dominio.Producto", b =>
                {
                    b.Navigation("InvProductos");
                });
#pragma warning restore 612, 618
        }
    }
}
